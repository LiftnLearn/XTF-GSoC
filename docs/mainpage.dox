/**
@mainpage Xen Test Framework
@tableofcontents

@section intro Introduction

This is both a framework for creating microkernel-based tests, and a suite of
tests built using the framework.

The microkernel boots, runs a set of related tests, and report the overall
status on the configured consoles.  Automating a suite of tests simply
involves booting each microkernel and checking the final printed line on the
guest's console.

The build system and library abstractions are specifically designed to make it
easy to write code once and compile it for multiple different environments
(virtual machines).

The current environments supported are:

Environment | Guest | Width | Paging
:-----------|:------|:------|:---------
`pv32pae`   | PV    | 32bit | PAE
`pv64`      | PV    | 64bit | Long mode
`hvm32`     | HVM   | 32bit | None
`hvm32pse`  | HVM   | 32bit | PSE
`hvm32pae`  | HVM   | 32bit | PAE
`hvm64`     | HVM   | 64bit | Long mode


@section getting-started Getting Started

Requirements:
- GNU Make >= 3.81
- GNU comaptible toolchain, capable of `-std=gnu99`, `-m64`, and `-m32`
    - Clang may be used, via `CC="clang -no-integrated-as"`
- Python

To obtain and build:

    $ git clone git://xenbits.xen.org/people/andrewcoop/xen-test-framework.git
    $ cd xen-test-framework
    $ make -j4

To run tests on a Xen host: (see @ref errata first)

    # xl create tests/example/test-pv64-example.cfg
    # cat /var/log/xen/console/guest-test-pv64-example.log
    --- Xen Test Framework ---
    Environment: PV 64bit (Long mode 4 levels)
    Hello World
    Test result: SUCCESS


@section errata Errata

- Running 32bit PV tests requires booting Xen with `"smep=0"` on IvyBridge and
  newer hardware, and with `"smap=0"` on Broadwell and newer hardware, as
  there is not clean separation between the paging settings of Xen and the
  guest.

- For the paths of binaries, `xl` accepts either an absolute path, or certain
  relative paths (`/etc/xen/` or `$CWD` for `kernel=`, `$libdir/xen/boot` for
  `firmware_override=`).  The default `PREFIX=` is configured correctly for
  running the tests out of the build working tree.  If the tests are running
  elsewhere, use `make install DESTDIR=$X PREFIX=$Y` to configure absolute
  paths appropriately for the test system.


@section further Further Information

@subsection test-intro Introduction to tests
@subpage test-introduction

@subsection test-idx Test Index
@subpage test-index


@section history History

The Xen Test Framework grew out of the work done to debug
[XSA-106](http://xenbits.xen.org/xsa/advisory-106.html).  As reported, Xen's
instruction emulator failed to perform dpl checks for instructions generating
software exceptions, which allowed guest userspace to bypass a security check
set up by the guest kernel.  Further investigation showed that the exception
frames which resulted from emulation were incorrect; specifically that the
reported `%%eip` was usually wrong.

A test kernel was written to compare the exception frames of faults and traps
when executed by hardware, and when emulated by the instruction emulator.  On
doing this, it was observed that different hardware was behaving differently
(depending on the degree of hardware assistance available), and some CPUs were
not behaving as described in the manual.

Once the embargo on XSA-106 lifted, changesets
[7dfa94c](http://xenbits.xen.org/gitweb/
?p=xen.git;a=commitdiff;h=7dfa94c6212b979cbfc8cff5ad5336922f4809d9) and
[36ebf14](http://xenbits.xen.org/gitweb/
?p=xen.git;a=commitdiff;h=36ebf14ebe60310aa22952cbb94de951c158437d) were the
eventual bugfixes which caused Xen to inject software exceptions correctly.

The test was deemed, in principle, to be a good project to invest some time in
and to clean up for more general use.  Naturally therefore, the cleanup
progressed only in the authors copious free time, when more important tasks
were not being done.

Moving forward by a year, the author was dismayed to discover that the
[XSA-156](http://xenbits.xen.org/xsa/advisory-156.html) release contained a
regression (causing infinite loops inside guests which used hardware debugging
facilities, fixed in [0747bc8](http://xenbits.xen.org/gitweb/
?p=xen.git;a=commitdiff;h=0747bc8b4d85f3fc0ee1e58418418fa0229e8ff8)) which
would have been caught by the original test for XSA-106, had that test been in
a usable state.

[It](@ref test-swint-emulation) now is.


@section licence Licence
@include COPYING

*/
